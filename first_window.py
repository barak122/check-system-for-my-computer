# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'first_win.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QProgressBar
from PyQt5.QtCore import *
from openpyxl import *
from openpyxl.styles import Font, PatternFill
import face_recognition
import numpy as np
import cv2
import time
import os
import shutil


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        # MainWindow.resize(2066, 1091)
        MainWindow.setStyleSheet("background-color: rgb(66, 126, 198);")
        # MainWindow.setWindowFlag(QtCore.Qt.WindowCloseButtonHint, False)  # TODO ביטול האופצייה לסגירת החלון
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(630, 120, 631, 411))
        self.label.setStyleSheet("")
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("face_scan.png"))
        self.label.setObjectName("label")
        self.label2 = QtWidgets.QLabel(self.centralwidget)
        self.label2.setGeometry(QtCore.QRect(525, 600, 91, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label2.setFont(font)
        self.label2.setStyleSheet("color: rgb(255, 255, 255);")
        self.label2.setObjectName("label2")
        self.progressbar = QProgressBar(self.centralwidget)
        self.progressbar.setGeometry(680, 600, 610, 25)
        self.progressbar.hide()

        def action_progresbar():
            try:
                self.label2.setText("מעבד...")
                for i in range(101):
                    time.sleep(0.1)
                    self.progressbar.setValue(i)
            except Exception as e:
                print(e)

        def face_r():
            def openwindow2():
                try:
                    self.window2 = QtWidgets.QMainWindow()
                    self.ui = Ui_MainWindow2()
                    self.ui.setupUi(self.window2)
                    self.window2.show()
                    video_capture.release()
                    cv2.destroyAllWindows()
                except Exception as en:
                    print(en)

            def file_organize():
                files = os.listdir(r"C:\Users\97252\Desktop\אופיר\QTdesineir\מערכת כניסה")
                # print(files)
                for file in files:
                    if ".png" in file and "." in file.replace(".png", ""):
                        shutil.move(file,
                                    r"C:\Users\97252\Desktop\אופיר\QTdesineir\מערכת כניסה\people_who_enter_intothecomputer")
            try:
                self.progressbar.show()
                video_capture = cv2.VideoCapture(0)
                ofir_image = face_recognition.load_image_file("ofir.jpg")
                ofir_face_encoding = face_recognition.face_encodings(ofir_image)[0]
                known_face_encoding = [ofir_face_encoding]
                known_face_names = ["Ofir"]
                op = True
                action_progresbar()  # TODO להריץ את הפונקצייה הזאת באותו הזמן שהפונקצייה של הפנים רצה
                while op:
                    ret, frame = video_capture.read()
                    rgb_frame = frame[:, :, ::-1]
                    face_locations = face_recognition.face_locations(rgb_frame)
                    face_encodings = face_recognition.face_encodings(rgb_frame, face_locations)
                    for (top, right, bottum, left), face_encoding in zip(face_locations,
                                                                         face_encodings):  # TODO לכל פרצוף בווידאו
                        matches = face_recognition.compare_faces(known_face_encoding,
                                                                 face_encoding)  # TODO זה עושה השוואה בין הפרצופים שידועים לנו לבין הפרצופים הווידאו
                        name = "UnKnown"
                        faces_distances = face_recognition.face_distance(known_face_encoding,
                                                                         face_encoding)  # TODO כמה זה קרוב או רחוק לפרצוף קיים
                        best_match_index = np.argmin(faces_distances)
                        if matches[best_match_index]:  # TODO אם הפרצוף שנמצא קיים השם משונה לשם של אותו פרצוף
                            name = known_face_names[int(best_match_index)]
                        cv2.rectangle(frame, (left, top), (right, bottum), (34, 177, 76),
                                      (
                                          3))  # TODO זה עושה ריבוע סביב הפרצוף(אחרי הגדרה של איפה הפרצוף והגדרה של הצבע והעובי)
                        cv2.rectangle(frame, (left, bottum - 35), (right, bottum), (34, 177, 76),
                                      cv2.FILLED)  # TODO זה עושה ריבוע סביב השם
                        cv2.putText(frame, name, (left + 6, bottum - 6), cv2.FONT_HERSHEY_DUPLEX, 1.0, (
                            255, 255,
                            255))  # TODO זה איפה יהיה הריבוע שאמור להיות סביב השם , הצבע שלו העובי והצבע של הטקסט בתוכו
                        if name == "Ofir":
                            camera = cv2.VideoCapture(0)
                            return_value, image = camera.read()
                            cv2.imwrite(f"{time.strftime('%d.%m.%y')}.png", image)
                            del camera
                            file_organize()
                            while op:
                                openwindow2()
                                MainWindow.close()
                                op = False
                        else:
                            break
                    # cv2.imshow('Video', frame)  # TODO זה מראה את הווידאו
                    if cv2.waitKey(2) & 0xFF == ord("q"):  # TODO  זה יוצא מהלולאה "q" אם אני לוחץ על
                        break
            except Exception as e:
                print(e, "  hello")

        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(590, 641, 691, 51))
        self.pushButton.setMaximumSize(QtCore.QSize(16777215, 16777214))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("border-style : outset;\n"
                                      "border-radius : 10px;\n"
                                      "border-width : 2px;\n"
                                      "background-color: rgb(63, 66, 251);\n"
                                      "border-color : blue;\n"
                                      "color: rgb(255, 255, 255);")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(face_r)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 866, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "לחץ כאן ולאחר מכן חכה מספר רגעים ובהם אל תזוז בבקשה"))
        self.label2.setText(_translate("MainWindow", ""))


#######################################################################################################

class Ui_MainWindow2(object):
    def openwindow(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self.window)
        self.window.show()

    def openwindow3(self):
        try:
            self.window3 = QtWidgets.QMainWindow()
            self.ui = Ui_MainWindow3()
            self.ui.setupUi(self.window3)
            self.window3.show()
        except Exception as e:
            print(e)

    def setupUi(self, MainWindow2):
        MainWindow2.setObjectName("MainWindow2")
        # MainWindow2.resize(784, 556)
        MainWindow2.setStyleSheet("background-color: rgb(66, 126, 198);")
        MainWindow2.showFullScreen()  # עושה את החלון על כל המסך

        self.centralwidget = QtWidgets.QWidget(MainWindow2)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(700, 100, 411, 31))
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("color: rgb(255, 255, 255);")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(870, 173, 371, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(1074, 280, 151, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(1130, 390, 91, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_4.setObjectName("label_4")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(862, 290, 161, 31))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(862, 390, 161, 31))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(775, 545, 371, 61))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("border-style : outset;\n"
                                      "color: rgb(255, 255, 255);\n"
                                      "background-color: rgb(63, 66, 251);\n"
                                      "border-width : 2px;\n"
                                      "border-radius : 10px;\n"
                                      "border-color : blue;")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.connection)
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(983, 448, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("background-color: rgb(66, 126, 198);\n"
                                        "color: rgb(255, 255, 255);")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.openwindow3)
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(1050, 450, 141, 20))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(548, 478, 678, 30))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        font.setPointSize(15)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("color: rgb(255, 0, 0);")
        self.label_6.setObjectName("label_6")
        MainWindow2.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow2)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 784, 26))
        self.menubar.setObjectName("menubar")
        MainWindow2.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow2)
        self.statusbar.setObjectName("statusbar")
        MainWindow2.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow2)
        QtCore.QMetaObject.connectSlotsByName(MainWindow2)

    def connection(self):
        # wb = load_workbook("computer_sys20.xlsx")
        wb = load_workbook(r"C:\Users\97252\Desktop\thing_not_in_hebrew\computer_sys20.xlsx")
        ws = wb.active
        row = ws.max_row
        details = {}
        for i in range(2, row + 1):  # לשנות מ-2 ל-1
            details[ws.cell(i, 1).value] = ws.cell(i, 2).value
        print("Details ", details)
        print("Keys ", details.keys())
        print("Values ", details.values())
        if len(details) != 0:
            for k, v in details.items():
                print("K ", k)
                print("V ", v)
                if str(k) == self.lineEdit.text() and str(v) == self.lineEdit_2.text():
                    print("Success")  # להפעיל קובץ pyw שרץ ברקע ושומר את הנתונים כמו לאילו אפליקציות המשתמש נכנס
                    kys = list(details.keys())
                    # print("Kys")
                    ky_place = kys.index(str(k)) + 2
                    # print("Ky_place")
                    for p in range(2, row + 1):  # צובע את התאים בעמודה C בצבע אדום(redFill)
                        ws.cell(p, 3).value = "לא נמצא"
                        # print(ws.cell(p, 3).value)
                        ws[f'C{p}'].font = Font(color="00000000")  # מגדיר את הצבע של הפונט לשחור
                        redFill = PatternFill(start_color='00FF0000',
                                              end_color='00FF0000',
                                              fill_type='solid')
                        ws[f'C{p}'].fill = redFill  # מגדיר את הצבע רקע של התא בצבע אדום
                        # print(ws[f'C{p}'].value)
                    ws.cell(ky_place, 3).value = "נמצא"
                    # print(ws.cell(ky_place, 3).value)
                    # print("Middle")
                    ws[f"C{ky_place}"].font = Font(color="00000000")  # מגדיר את הצבע של הפונט לשחור
                    greenFill = PatternFill(start_color='0000FF00',
                                            end_color='0000FF00',
                                            fill_type='solid')
                    ws[f"C{ky_place}"].fill = greenFill  # מגדיר את הצבע רקע של התא בצבע ירוק
                    self.label_6.setStyleSheet("color: rgb(0, 255, 0);")
                    self.label_6.setText("")
                    # print("After middle")
                    # wb.save("computer_sys20.xlsx")
                    wb.save(r"C:\Users\97252\Desktop\thing_not_in_hebrew\computer_sys20.xlsx")
                    quit()
                    # print("After save")
                    #################
                else:
                    self.label_6.setText("אנו מצטערים אבל השם משתמש אשר הוזן איננו קיים")
        else:
            self.label_6.setText("אנו מצטערים אבל השם משתמש אשר הוזן איננו קיים")

    def retranslateUi(self, MainWindow2):
        _translate = QtCore.QCoreApplication.translate
        MainWindow2.setWindowTitle(_translate("MainWindow2", "MainWindow"))
        self.label.setText(_translate("MainWindow2", "כאן תוכלו להיכנס למערכת"))
        self.label_2.setText(_translate("MainWindow2", "הכנס שם משתמש וסיסמא:"))
        self.label_3.setText(_translate("MainWindow2", "שם משתמש:"))
        self.label_4.setText(_translate("MainWindow2", "סיסמא:"))
        self.pushButton.setText(_translate("MainWindow2", "לחץ כאן על מנת להתחבר"))
        self.pushButton_2.setText(_translate("MainWindow2", "לחץ כאן"))
        self.label_5.setText(_translate("MainWindow2", "אין לך עדיין משתמש?"))
        self.label_6.setText(_translate("MainWindow2", ""))


###############################################################################################################################

class Ui_MainWindow3(object):
    def setupUi(self, MainWindow3):
        MainWindow3.setObjectName("MainWindow3")
        # MainWindow3.resize(800, 600)
        MainWindow3.setStyleSheet("background-color: rgb(66, 126, 198);")
        MainWindow3.showFullScreen()  # עושה את החלון על כל המסך
        self.centralwidget = QtWidgets.QWidget(MainWindow3)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(715, 570, 401, 61))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("border-style : outset;\n"
                                      "background-color: rgb(63, 66, 251);\n"
                                      "color: rgb(255, 255, 255);\n"
                                      "border-width : 2px;\n"
                                      "border-radius : 10px;\n"
                                      "border-color : blue;")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.register)
        self.pushButton2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton2.setGeometry(QtCore.QRect(1867, 3, 36, 36))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setWeight(75)
        self.pushButton2.setFont(font)
        self.pushButton2.setStyleSheet("border-style : outset;\n"
                                       "background-color: rgb(251, 0, 0);\n"
                                       "color: rgb(255, 255, 255);\n"
                                       "border-width : 2px;\n"
                                       "border-radius : 10px;\n"
                                       "border-color : blue;")
        self.pushButton2.setObjectName("pushButton2")
        self.pushButton2.clicked.connect(MainWindow3.close)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(750, 110, 291, 31))
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("color: rgb(255, 255, 255);")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(1070, 285, 151, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(1070, 373, 91, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(1050, 450, 181, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_4.setObjectName("label_4")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(842, 300, 191, 31))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(842, 380, 191, 31))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_3.setGeometry(QtCore.QRect(842, 460, 191, 31))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(664, 195, 651, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(491, 516, 751, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("color: rgb(255, 0, 0);")
        self.label_6.setObjectName("label_6")
        MainWindow3.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow3)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        MainWindow3.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow3)
        self.statusbar.setObjectName("statusbar")
        MainWindow3.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow3)
        QtCore.QMetaObject.connectSlotsByName(MainWindow3)

    def register(self):
        global MainWindow3
        # wb = load_workbook("computer_sys20.xlsx")
        wb = load_workbook(r"C:\Users\97252\Desktop\thing_not_in_hebrew\computer_sys20.xlsx")
        ws = wb.active
        row = ws.max_row
        accounts = {}
        for i in range(2, row + 1):
            accounts[ws.cell(i, 1).value] = ws.cell(i, 2).value
        if self.lineEdit.text() in accounts.keys():
            self.label_6.setText("השם משתמש הזה כבר קיים , יש לנסות שם אחר")
        else:
            if len(self.lineEdit_2.text()) <= 4:
                self.label_6.setText("הסיסמא חייבת להכיל לפחות 5 תווים בתוכה!")
            else:
                if self.lineEdit_2.text() == self.lineEdit_3.text():
                    ws.cell(row=row + 1, column=1).value = self.lineEdit.text()
                    ws.cell(row=row + 1, column=2).value = self.lineEdit_2.text()
                    # wb.save("computer_sys20.xlsx")
                    wb.save(r"C:\Users\97252\Desktop\thing_not_in_hebrew\computer_sys20.xlsx")
                    self.label_6.setText("השם משתמש הוגדר בהצלחה!")
                    self.label_6.setStyleSheet("color: rgb(0, 255, 0);")
                else:
                    self.label_6.setText("הסיסמאות אינן זהות , נסו שוב")

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "לחץ כאן על מנת לסיים את ההרשמה"))
        self.pushButton2.setText(_translate("MainWindow", "x"))
        self.label.setText(_translate("MainWindow", "כאן תוכלו להירשם"))
        self.label_2.setText(_translate("MainWindow", "שם משתמש:"))
        self.label_3.setText(_translate("MainWindow", "סיסמא:"))
        self.label_4.setText(_translate("MainWindow", "אישור הסיסמא:"))
        self.label_5.setText(_translate("MainWindow", "הירשמו עם שם משתמש וסיסמא:"))
        self.label_6.setText(_translate("MainWindow", ""))


if __name__ == "__main__":
    try:
        import sys

        app = QtWidgets.QApplication(sys.argv)
        MainWindow = QtWidgets.QMainWindow()
        ui = Ui_MainWindow()
        ui.setupUi(MainWindow)
        MainWindow.show()
        MainWindow.showFullScreen()  # עושה את החלון על כל המסך
        sys.exit(app.exec_())
    except Exception as e:
        print(e)
